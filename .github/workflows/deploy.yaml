name: Build and Deploy

on:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Build 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.QA_ROLE_ARN }}
          aws-region: us-west-2

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Image
        env:
          ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          export SHORT_TAG=$(echo "${{ github.sha }}" | cut -c1-8)
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$SHORT_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$SHORT_TAG
          echo "image_tag=$SHORT_TAG" >> $GITHUB_OUTPUT

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.PROD_ROLE_ARN }}
          aws-region: us-east-1

      - name: Setup Helm
        uses: azure/setup-helm@v3

      - name: Update Kubernetes Deployment
        run: |
          aws eks update-kubeconfig --region us-east-1 --name ${{ secrets.EKS_CLUSTER_NAME }}
          helm upgrade --install accept-a-payment ./kubernetes \
            --namespace frontend-domain \
            --set image.tag=${{ needs.build.outputs.image_tag }} \
            --set image.repository=${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}
